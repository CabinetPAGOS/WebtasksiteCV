<!DOCTYPE html>
<html lang="fr">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <link rel="icon" href="\img\logoPagosImg02.png" type="image/x-icon">
        <title>Clients de Pagos</title>

        <!-- Bootstrap CSS -->
		<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
		
		<!-- FontAwesome (pour les icônes) -->
		<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">

		<!-- Custom CSS -->
		<style>
			body {
				font-family: 'Helvetica', Arial, sans-serif;
			}
			/* Navbar */
			.navbar-custom {
				background-color: #818285;
				border-style: none;
			}

			.navbar-custom .nav-link {
				color: #ffffff;
				font-size: 19px;
			}

			.navbar-custom .nav-link:hover {
				color: #000000;
			}

			.img-navbar {
				width: 100%;
				height: 80px;
			}

			.navbar-toggler-icon {
				color: white;
			}

			.dropdown-menu {
				background-color: #818285;
			}

			.dropdown-menu .dropdown-header {
				color: #ffffff;
				font-size: 16px;
			}

			.dropdown-menu .dropdown-item:hover {
				background-color: #818285;
				color: #ffffff;
			}

            /* Centrage du titre principal */
            .title {
                text-align: center;
                font-size: 2rem;
                color: #000;
                margin-bottom: 20px;
                font-weight: bold;
            }

            /* Container pour les clients */
            .client-container {
                position: relative;
                border: 2px solid #000;
                padding: 30px;
                margin: 20px auto;
                width: 95%;
                max-width: 1200px;
                background-color: #fff;
                border-radius: 50px;
                box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
            }

            .client-card {
                display: flex;
                flex-wrap: wrap;
                justify-content: center;
                gap: 20px;
            }

            /* Bloc client */
            .client-rectangle {
                display: flex;
                flex-direction: column;
                justify-content: flex-start;
                width: 30%;
                background-color: #fff;
                border: 2px solid #000;
                border-radius: 15px;
                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
                transition: transform 0.2s ease;
            }

            .client-rectangle:hover {
                transform: translateY(-5px);
            }

            /* Header du client avec logo et nom */
            .client-header {
                display: flex;
                align-items: center;
                background-color: #d7df22;
                padding: 10px;
                height: 100px; /* Hauteur fixe pour toutes les bandes */
                border-radius: 15px 15px 0 0;
            }

            .client-logo {
                max-width: 65px;
                height: auto;
                margin-right: 10px;
                border-radius: 5px;
            }

            .client-header h3 {
                margin: 0;
                font-size: 18px;
                color: #000;
                font-weight: bold;
                flex: 1;
            }

            .client-content {
                display: flex;
                flex-direction: column;
                justify-content: center; /* Centre verticalement le contenu */
                align-items: center;     /* Centre horizontalement le contenu */
                padding: 20px;
                background-color: #fff;
                border-radius: 0 0 15px 15px;
                text-align: center;
            }

            /* Titre des utilisateurs associés */
            .client-content h4 {
                font-size: 18px;
                font-weight: bold;
                text-align: center;
                margin-bottom: 15px;
                color: #333;
            }

            /* Liste des utilisateurs */
            .client-content ul {
                list-style: none;
                padding-left: 0;
                margin-bottom: 0;
                display: flex;
                flex-direction: column;
                align-items: flex-start; /* Centrer la liste des utilisateurs */
            }

            .client-content li {
                display: flex;
                align-items: center; /* Pour aligner les icônes et le texte sur une ligne */
                margin-bottom: 10px;
                font-size: 16px;
                font-weight: 500;
                color: #555;
            }

            /* Icône utilisateur */
            .user-icon {
                margin-right: 10px;
                font-size: 18px;
                color: #6c757d;
            }

            .client-content li:hover .user-icon {
                color: #333; /* Changement de couleur sur hover */
            }

            /* Style des noms d'utilisateurs */
            .client-content li:hover {
                color: #000; /* Nom plus visible au hover */
                font-weight: bold;
            }

            /* Style du bouton 'VISUALISER' */
            .client-content .btn-secondary {
                background-color: #fff;
                color: #000;
                border: 1px solid black;
                margin-top: 15px;
                padding: 10px 20px;
                font-size: 16px;
                border-radius: 5px;
                transition: all 0.3s ease;
            }

            /* Effet au survol pour le bouton */
            .client-content .btn-secondary:hover {
                background-color: #6c757d;
                color: #fff;
                transform: translateY(-3px);
                border-color: #6c757d;
            }

            /* Icônes de pouces et cloche */
            .client-actions {
                display: flex;
                justify-content: center;
                align-items: center;
                gap: 10px; /* Espacement entre les icônes */
                margin-top: 10px;
            }

            .thumb-icon {
                color: #000;
                cursor: pointer;
                font-size: 24px;
                transition: color 0.3s ease, transform 0.3s ease;
            }

            .thumb-icon:hover {
                transform: scale(1.2);
            }

            .approve {
                color: green;
            }

            .disapprove {
                color: red;
            }

            .notify-icon {
                color: blue;
                cursor: pointer;
                font-size: 24px;
            }

            .notify-icon:hover {
                transform: scale(1.2);
                color: darkblue;
            }

            p {
                text-align: center;
            }

            hr {
                margin: 20px 0;
                opacity: 1;
                border: 2px solid #000;
            }

            #filter-container {
                margin-bottom: 20px;
            }

            .form-check {
                margin-right: 20px;
            }

            /* Style pour la barre de recherche */
            .search-bar {
                display: flex;
                margin-top: 30px;
                margin-left: 75px;
            }

            .search-input {
                width: 62.2%; /* Largeur de la barre de recherche */
                padding: 15px;
                font-size: 16px;
                border: 2px solid #000; /* Bordure solide noire */
                border-radius: 10px; /* Bordures arrondies */
                box-sizing: border-box; /* Inclut le padding dans la largeur totale */
            }

            /* Footer */
            footer {
                text-align: center;
                padding: 20px 0;
                background-color: #f4f4f4;
                border-top: 1px solid #ccc;
            }

            footer p {
                color: #333;
            }

            /* Style pour les webtasks */
            .webtask-container {
                display: flex;
                flex-wrap: wrap; /* Permet plusieurs colonnes */
                justify-content: center; /* Centre le contenu */
                margin: 20px;
            }

            .webtask-card {
                position: relative;
                border: 2px solid #000;
                padding: 25px;
                margin: 20px;
                width: 100%;
                max-width: 430px; /* Réduit la largeur maximale */
                background-color: #fff;
                box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
                overflow: hidden; /* Empêche le débordement du texte */
            }

            .webtask-card h2 {
                text-align: center;
                color: #000000;
                padding: 10px;
                border-radius: 5px;
                background-color: #d7df22;
                font-size: 18px; /* Réduit la taille de la police du titre */
                white-space: normal; /* Permet le retour à la ligne */
                margin-bottom: 20px;
                overflow: visible; /* Permet d'afficher le texte complet */
                text-overflow: clip; /* Ne coupe pas le texte avec des points de suspension */
                display: block; /* Assure que le texte utilise text-overflow */
            }

            .webtask-card ul {
                list-style-type: none;
                padding: 0;
            }

            .webtask-card ul li {
                margin-bottom: 10px;
            }

            .btn-group {
                display: flex;
                justify-content: center; /* Centre les boutons */
                gap: 15px; /* Espace entre les boutons */
                margin-top: 20px;
            }

            .btn-group .btn {
                margin-right: 10px;
            }

            .btn-group .btn:last-child {
                margin-right: 0;
            }
            
            .webtask-card .btn-secondary {
                background-color: #fff;
                color: #000;
                border: 1px solid black;
                margin-right: 10px;
                padding: 10px 20px; /* Espacement interne du bouton */
                font-size: 16px; /* Taille de la police */
                border-radius: 5px;
                transition: all 0.3s ease; /* Transition pour les effets de survol */
            }
            
            .webtask-card .btn-secondary:hover {
                background-color: #6c757d; /* Couleur de fond au survol */
                color: #fff; /* Couleur du texte au survol */
                transform: translateY(-3px); /* Effet de levée au survol */
                border-color: #6c757d; /* Couleur de bordure au survol */
            }

            .webtask-card .btn-secondary:last-child {
                margin-right: 0;
            }
        </style>
    </head>
    <body>
        <nav class="navbar navbar-expand-lg navbar-custom">
			<div class="container-fluid">
				<a class="navbar-brand" href="{{ path('app_homeclient') }}">
					<img class="img-navbar" src="img/logoPagosImg04.png" alt="Logo" height="40">
				</a>
				<button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarColor01" aria-controls="navbarColor01" aria-expanded="false" aria-label="Toggle navigation">
					<span class="navbar-toggler-icon">
						<i class="fas fa-bars"></i>
					</span>
				</button>
				<div class="collapse navbar-collapse" id="navbarColor01">
					<ul class="navbar-nav me-auto">
						<li class="nav-item">
							<a class="nav-link"  href="{{ path('app_homeclient') }}">
								<b>Accueil</b>
							</a>
						</li>
						<li class="nav-item">
							<a class="nav-link" href="{{ path('app_taches') }}">
								<b>Tâches</b>
							</a>
						</li>
						<li class="nav-item">
							<a class="nav-link" href="{{ path('app_creertaches') }}">
								<b>Créer une tâche</b>
							</a>
						</li>
                        {% set allowed_ids = ['e4e080b3758761bd01758f5fcfed03d9'] %}
						{% if app.user.idclient and app.user.idclient.getId() in allowed_ids %}
						<li class="nav-item">
							<a class="nav-link" style="color: #000" href="{{ path('app_clientsdepagos') }}">
								<b>Clients de Pagos</b>
							</a>
						</li>
						{% endif %}
					</ul>

					<ul class="navbar-nav ms-auto">
                        <li class="nav-item">
                            <a class="nav-link" href="#" style="color: #ffffff; text-align: center;">
                                <b>{{ app.user.nom }} {{ app.user.prenom }}</b>
                            </a>
                        </li>
						<li class="nav-item dropdown">
							<a class="nav-link dropdown-toggle" href="#" id="navbarUserDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
								<i class="fas fa-user-circle" style="font-size: 1.5em; color: white;"></i>
							</a>
							<ul
								class="dropdown-menu dropdown-menu-end" aria-labelledby="navbarUserDropdown">
								<!-- User's Name -->
								<li><hr class="dropdown-divider"></li>
								<!-- Logout Button -->
								<li>
									<a class="dropdown-item" href="{{ path('app_logout') }}">
										<b><i class="fas fa-sign-out-alt"></i>Se déconnecter</b>
									</a>
								</li>
							</ul>
						</li>
					</ul>
				</div>
			</div>
		</nav>

        <div class="client-container">
            <h2 class="title">CLIENTS DU CABINET PAGOS</h2>
            <br>
            <div class="client-card">
                {% for client in clients %}
                    <div class="client-rectangle">
                        <div class="client-header">
                            {% if client.logoBase64 %}
                                <img src="data:image/png;base64,{{ client.logoBase64 }}" alt="Logo de {{ client.raisonSociale }}" class="client-logo" />
                            {% endif %}
                            <h3>{{ client.raisonSociale }}</h3>
                        </div>
                        <div class="client-content">
                            <ul>
                                {% set hasUsers = false %}
                                {% for user in users %}
                                    {% if user.idclient is not null and user.idclient.getid() == client.id %}
                                        {% set hasUsers = true %}
                                        <li><span class="user-icon">👤</span> {{ user.nom }} {{ user.prenom }} </li>
                                    {% endif %}
                                {% endfor %}
                                {% if not hasUsers %}
                                    <li>Aucun utilisateur associé.</li>
                                {% endif %}
                            </ul>
                            <!-- Icônes de pouces et cloche -->
                            <div class="client-actions">
                                <i class="fas fa-thumbs-up thumb-icon approve" title="Approuver"></i>
                                <i class="fas fa-thumbs-down thumb-icon disapprove" title="Désapprouver"></i>
                                <i class="fas fa-bell notify-icon" title="Notifier"></i>
                            </div>
                            <!-- Bouton Visualiser -->
                            <button type="button" class="btn btn-secondary consulter" data-client-id="{{ client.id }}">VISUALISER</button>
                        </div>
                    </div>
                {% endfor %}
            </div>
        </div>

        <!-- Conteneur pour la barre de recherche et les webtasks -->
        <div id="webtasks-container">
            <!-- La barre de recherche sera ajoutée ici -->
        </div>

        <!-- Footer -->
		<footer>
			<p><b>© Copyright @ 2024 par <span style="color: #d7df22;">Cabinet PAGOS</span> | tous droits réservés.</b></p>
		</footer>

         <!-- SCRIPT JS -->
        <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.min.js"></script>
        <script>
            document.addEventListener('DOMContentLoaded', function () {
                function loadWebTasks(clientId, query = '') {
                    fetch(`/client/${clientId}/webtasks?query=${encodeURIComponent(query)}`)
                        .then(response => response.json())
                        .then(webtasksData => {
                            var container = document.getElementById('webtasks-list');
                            container.innerHTML = ''; // Vider le container

                            if (webtasksData.length === 0) {
                                container.innerHTML = '<p><b>Aucune Webtask ne correspond à votre recherche.</b></p>';
                                return;
                            }

                            // Insérer une barre de séparation avant les webtasks
                            var webtasksContainer = document.getElementById('webtasks-container');
                            if (!document.getElementById('separator-hr')) {
                                var hr = document.createElement('hr');
                                hr.id = 'separator-hr';
                                webtasksContainer.insertAdjacentElement('beforebegin', hr);
                            }

                            // Afficher les webtasks
                            container.innerHTML = webtasksData.filter(webtask => webtask.etatdelawebtask === 'ON').map(webtask => `
                                
                                <div class="webtask-card hidden" data-code="${webtask.code}" data-title="${webtask.title}">
                                    <h2><b>${webtask.title}</b></h2>
                                    <ul>
                                        <li><b><u>WebTask :</u></b> ${webtask.webtask}</li>
                                        <li><b><u>Description :</u></b> ${webtask.description.replace(/\n/g, '<br>')}</li>
                                        <li><b><u>Version :</u></b> ${webtask.versionLibelle}</li>
                                        <li><b><u>Date de fin demandée :</u></b> ${webtask.datefinDemandee}</li>
                                    </ul>
                                    <div class="btn-group" role="group">
                                        <button type="button" class="btn btn-secondary consulter rounded" onclick="window.location.href='/consultertaches?id=${webtask.code}'">CONSULTER</button>
                                    </div>
                                </div>
                            
                            `).join('');
                        })
                        .catch(error => {
                            console.error('Erreur lors de la récupération des Webtasks:', error);
                            container.innerHTML = `<p><b>Aucune Webtask pour ce client</b></p>`;
                        });
                }

                function initSearch(clientId, clientName) {
                    var container = document.getElementById('webtasks-container');
                    container.innerHTML = `
                        <h3 style="text-align: center;">Liste des WebTask pour le client : <span class="client-name">${clientName}</span></h3>
                        <div class="search-bar">
                            <input type="text" id="searchInput" class="search-input" placeholder="Rechercher une WebTask 🔎" value="">
                        </div>
                        <div class="webtask-container" id="webtasks-list"></div> <!-- Conteneur pour les webtasks -->
                    `;

                    // Charger les webtasks initiales sans filtre
                    loadWebTasks(clientId);

                    // Gestion de la recherche
                    document.getElementById('searchInput').addEventListener('input', function () {
                        const query = this.value.trim();
                        loadWebTasks(clientId, query); // Charger les webtasks filtrées
                    });

                    // Recherche avec la touche "Entrée"
                    document.getElementById('searchInput').addEventListener('keypress', function (e) {
                        if (e.which === 13) { // Touche Entrée
                            e.preventDefault(); // Empêche l'action par défaut de l'Entrée
                            const query = this.value.trim();
                            loadWebTasks(clientId, query); // Charger les webtasks filtrées
                        }
                    });
                }

                document.querySelectorAll('.btn-secondary.consulter').forEach(function (button) {
                    button.addEventListener('click', function () {
                        var clientId = this.getAttribute('data-client-id');

                        fetch(`/client/${clientId}/name`)
                            .then(response => response.json())
                            .then(clientData => {
                                var clientName = clientData.name; // Assurez-vous que `name` est la bonne clé dans la réponse
                                document.getElementById('webtasks-container').innerHTML = `
                                    <h3 style="text-align: center;">Liste des WebTask pour le client : <span class="client-name">${clientName}</span></h3>
                                `;

                                // Initialiser la recherche avec le nom du client
                                initSearch(clientId, clientName);

                            })
                            .catch(error => {
                                console.error('Erreur lors de la récupération des informations du client:', error);
                                var container = document.getElementById('webtasks-container');
                                container.innerHTML = `<p><b>Erreur lors de la récupération des informations du client</b></p>`;
                            });
                    });
                });
            });
        </script>
    </body>
</html>