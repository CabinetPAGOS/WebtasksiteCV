<!DOCTYPE html> 
<html lang="fr">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <link rel="icon" href="\img\logoPagosImg02.png" type="image/x-icon">
        <title>Répondre à une tâche</title>
        <!-- Bootstrap CSS -->
		<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">

		<!-- FontAwesome (pour les icônes) -->
		<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">

		<!-- Custom CSS -->
        <style>
            body {
                font-family: 'Helvetica', Arial, sans-serif;
            }
            /* Navbar */
            .navbar-custom {
                background-color: #818285;
                border-style: none;
            }

            .navbar-custom .nav-link {
                color: #ffffff;
                font-size: 19px;
            }

            .navbar-custom .nav-link:hover {
                color: #000000;
            }

            .img-navbar {
                width: 100%;
                height: 80px;
            }

            .navbar-toggler-icon {
                color: white;
            }

            .dropdown-menu {
                background-color: #818285;
            }

            .dropdown-menu .dropdown-header {
                color: #ffffff;
                font-size: 16px;
            }

            .dropdown-menu .dropdown-item {
                color: #ff0000;
            }

            .dropdown-menu .dropdown-item:hover {
                background-color: #818285;
                color: #ffffff;
            }  
            hr {
                margin: 20px 0;
                opacity: 1;
                border: 2px solid #000;
            }
            p {
                text-align: center;
            }

            /* Styles spécifiques pour le formulaire */
            .form {
                background: white;
                padding: 1rem;
                border-radius: 5px;
                max-width: 82%;
                margin: 0 auto;
                display: flex;
                flex-direction: column;
            }
            .form-row {
                display: flex;
                flex-wrap: wrap;
                gap: 1rem;
                margin-bottom: 1rem;
            }
            .form-row .form-group {
                flex: 1 1 calc(33.33% - 1rem);
            }
            .form-group {
                margin-bottom: 1rem;
            }
            .form-group label {
                font-weight: bold;
                text-decoration: underline;
            }
            .form-group div {
                width: 100%;
                padding: 0.5rem;
                border: 1px solid #000;
                border-radius: 5px;
                box-sizing: border-box;
                font-size: 16px;
                margin-bottom: 0.5rem;
            }
            .form-group input {
                width: 100%;
                padding: 0.5rem;
                border: 1px solid #000;
                border-radius: 5px;
                box-sizing: border-box;
                font-size: 16px;
                margin-bottom: 0.5rem;
            }
            .form-group textarea {
                width: 100%;
                padding: 0.5rem;
                border: 1px solid #000;
                border-radius: 5px;
                box-sizing: border-box;
                font-size: 16px;
                margin-bottom: 0.5rem;
            }

            /* Button Styles */
            .form .btn-secondary {
                background-color: #fff;
                color: #000;
                border: 1px solid black;
                margin-right: 10px;
                padding: 10px 20px; /* Espacement interne du bouton */
                font-size: 16px; /* Taille de la police */
                border-radius: 5px;
                transition: all 0.3s ease; /* Transition pour les effets de survol */
            }

            .form .btn-secondary:hover {
                background-color: #6c757d; /* Couleur de fond au survol */
                color: #fff; /* Couleur du texte au survol */
                transform: translateY(-3px); /* Effet de levée au survol */
                border-color: #6c757d; /* Couleur de bordure au survol */
            }

            .btn-group {
                display: flex;
                justify-content: center; /* Centre les boutons */
                gap: 15px; /* Espace entre les boutons */
                margin-top: 20px;
            }

            /* Styles pour les titres avec fond coloré séparé */
            .title-container {
                display: flex;
                justify-content: center;
                align-items: center;
                margin-bottom: 1rem;
            }
            .title01 {
                background-color: #d7df22;
                padding: 1rem 10rem;
                border-radius: 5px;
                margin: 0 0.5rem;
                text-align: center;
                position: relative;
                z-index: 1;
            }
            .title02 {
                background-color: #d7df22;
                padding: 1rem 5rem;
                border-radius: 5px;
                margin: 0 0.5rem;
                text-align: center;
                position: relative;
                z-index: 1;
            }
            .title:nth-child(1)::after {
                content: "";
                position: absolute;
                top: 50%;
                left: 100%;
                width: 1rem;
                height: 100%;
                background: white;
                z-index: -1;
            }
            .title:nth-child(2)::before {
                content: "";
                position: absolute;
                top: 50%;
                right: 100%;
                width: 1rem;
                height: 100%;
                background: white;
                z-index: -1;
            }
            .description-text {
                color: #1AC2DD; /* Couleur bleu ciel */
            }

            /* Style Tag */
            .tag-minor {
				background-color: #00B050;
				font-weight: bold;
				color: #000000;
				padding: 5px;
				border-radius: 3px;
			}
			.tag-serious {
				background-color: #FFC000;
				font-weight: bold;
				color: #000000;
				padding: 5px;
				border-radius: 3px;
			}
			.tag-blocking {
				background-color: #FF0000;
				font-weight: bold;
				color: #000000;
				padding: 5px;
				border-radius: 3px;
			}
			.tag-unknown {
				background-color: grey;
				font-weight: bold;
				color: #000000;
				padding: 5px;
				border-radius: 3px;
			}

            /* Style Avancement */
            .text-npc { color: #ff0000; font-weight: bold; }
            .text-pc { color: #ffc000; font-weight: bold; }
            .text-t { color: #00b050; font-weight: bold; }
            .text-a { color: #FF0000; font-weight: bold; background-color: #00C995; }
            .text-r { color: #ffffff; font-weight: bold; background-color: #000000; }
            .text-v { color: #04C49E; font-weight: bold; background-color: #000000; }
            .text-sc { color: #ffffff; font-weight: bold; background-color: #C92093; }
            .text-gc { color: #000000; font-weight: bold; background-color: #00B050; }

            /* Style pour le drop-area */
			#drop-area {
				border: 2px dashed #000;
				padding: 20px;
				text-align: center;
				cursor: pointer;
			}
			.file-details {
				margin-top: 15px;
			}

            .btn-custom-green {
                background-color: green;
                color: white;
            }

            .btn-custom-red {
                background-color: red;
                color: white;
            }

            /* Footer */
            footer {
                text-align: center;
                padding: 20px 0;
                background-color: #f4f4f4;
                border-top: 1px solid #ccc;
            }

            footer p {
                color: #333;
            }
        </style>
    </head>
    <body>
        <nav class="navbar navbar-expand-lg navbar-custom">
			<div class="container-fluid">
				<a class="navbar-brand" href="{{ path('app_homeclient') }}">
					<img class="img-navbar" src="/img/logoPagosImg04.png" alt="Logo" height="40">
				</a>
				<button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarColor01" aria-controls="navbarColor01" aria-expanded="false" aria-label="Toggle navigation">
					<span class="navbar-toggler-icon">
						<i class="fas fa-bars"></i>
					</span>
				</button>
				<div class="collapse navbar-collapse" id="navbarColor01">
					<ul class="navbar-nav me-auto">
						<li class="nav-item">
							<a class="nav-link" href="{{ path('app_homeclient') }}">
								<b>Accueil</b>
							</a>
						</li>
						<li class="nav-item">
							<a class="nav-link" href="{{ path('app_taches') }}">
								<b>Tâches</b>
							</a>
						</li>
						<li class="nav-item">
							<a class="nav-link" style="color: #000" href="{{ path('app_creertaches') }}">
								<b>Créer une tâche</b>
							</a>
						</li>

						{% set allowed_ids = ['e4e080b3758761bd01758f5fcfed03d9'] %}
						{% if app.user.idclient and app.user.idclient.getId() in allowed_ids %}
							<li class="nav-item">
								<a class="nav-link" href="{{ path('app_clientsdepagos') }}">
									<b>Clients de Pagos</b>
								</a>
							</li>
						{% endif %}


					</ul>
					<ul class="navbar-nav ms-auto">
						<li class="nav-item">
							<a class="nav-link" href="#" style="color: #ffffff; text-align: center;">
								<b>{{ app.user.nom }}
									{{ app.user.prenom }}</b>
							</a>
						</li>

						<li class="nav-item dropdown">
							<a class="nav-link dropdown-toggle" href="#" id="navbarUserDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
								<img
								src="data:image/png;base64,{{ logo }}" alt="Logo du client" class="client-logo" style="width: 30px; height: 30px; border-radius: 50%;"/>
							<!-- Ajout du logo client -->
							</a>
							<ul class="dropdown-menu dropdown-menu-end" aria-labelledby="navbarUserDropdown">
								<li><hr class="dropdown-divider"></li>
								<li>
									<a class="dropdown-item" href="{{ path('app_logout') }}">
										<b>
											<i class="fas fa-sign-out-alt"></i>
											Se déconnecter
										</b>
									</a>
								</li>
							</ul>
						</li>

					</ul>
				</div>
			</div>
		</nav>

        <br>

        <div class="container">
            <div class="title-container">
                <h4 class="title01"><b>{{webtask.titre}}</b></h4>
                <h4 class="title02"><b>{{ webtask.libelle }}</b></h4>
            </div>
        </div>

        <form method="post" action="{{ path('app_reponsetaches', { id: webtask.id }) }}" id="taskForm" class="task-form">
			<div class="form">
                <div class="form-group">
                    <label for="description"><b><u>Description :</u></b></label>
                    <div id="description" class="description-text"><b>{{ webtask.description|nl2br }}</b></div>
                </div>

                <div class="form-row">
                    <div class="form-group">
                        <label for="due_date"><b><u>Date de Fin Demandée :</u></b></label>
                        <input type="text" id="due_date" name="due_date" value="{{ webtask.DateFinDemandee }}" placeholder="Renseigner la date de fin demandée" required>
                    </div>
                    <div class="form-group">
                        <label for="progress">
                            <b><u>État d'avancement :</u></b>
                        </label>
                        <div id="progress" class="{{ mappedAvancement.class }}">{{ mappedAvancement.label }}</div>
                    </div>
                    <div class="form-group">
                        <label for="version"><b><u>Version :</u></b></label>
                        <div id="version">{{ webtask.versionLibelle }}</div>
                    </div>
                    <div class="form-group">
                        <label for="database"><b><u>Base de données :</u></b></label>
                        {% if webtask.baseclient is empty %}
                            <div id="database">Non renseignée</div>
                        {% else %}
                            <div id="database">{{ webtask.baseclient }}</div>
                        {% endif %}
                    </div>
                    <div class="form-group">
                        <label for="tag"><b><u>Tag :</u></b></label>
                        <div id="tag" class="{{ tagClass }}">{{ mappedTag }}</div>
                    </div> 
                </div>

                <div class="form-group">
                    <label for="nouveau_commentaire"><b><u>Nouveau commentaire :</u></b></label>
                    <textarea id="nouveau_commentaire" name="nouveau_commentaire" rows="4" placeholder="Renseigner le nouveau commentaire" required></textarea>
                </div>

                <div class="form-group">
                    <label for="fileUpload">
                        <b><u>Souhaitez-vous déposer des fichiers ?</u></b>
                    </label>
                </div>

                <!-- Boutons Oui et Non pour activer/désactiver l'upload -->
                <div>
                    <button type="button" class="btn btn-success" onclick="handleFileUpload(true, '{{ googleDriveLink }}')">Oui</button>
                    <button type="button" class="btn btn-danger" onclick="handleFileUpload(false)">Non</button>
                </div>

                <!-- Section pour uploader des fichiers (masquée par défaut) -->
                <div id="fileUploadSection" style="display: none; margin-top: 15px;">
                    {% if googleDriveLink %}
                        
                    {% else %}
                        <p>Pas de Google Drive associé à ce client.</p>
                    {% endif %}
                    
                    <!-- Conteneur pour les champs de titre et de lien pour chaque fichier -->
                    <div id="fileInputContainer"></div>
                </div>
            </div>
        </div>

        <!-- Bouton ENREGISTRER, masqué initialement -->
        <div class="btn-group" role="group">
            <button type="submit" class="btn btn-secondary" id="submitButton" style="display: none;">
                <b>ENREGISTRER</b>
            </button>
        </div>

		<!-- Footer -->
		<footer>
			<p><b>© Copyright @ 2024 par <span style="color: #d7df22;">Cabinet PAGOS</span> | tous droits réservés.</b></p>
		</footer>

        <!-- Scripts -->
        <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
        <script>
            const maxFiles = 3;
            let fileCount = 0;
            const fileInputContainer = document.getElementById('fileInputContainer');
            const submitButton = document.getElementById('submitButton');
            const fileUploadSection = document.getElementById('fileUploadSection');

            function handleFileUpload(wantsToUpload, googleDriveLink) {
                if (wantsToUpload) { // Ouvre le lien Google Drive dans une nouvelle fenêtre
                    if (googleDriveLink) {
                    window.open(googleDriveLink, '_blank');
                    }

                    // Afficher la section de téléchargement des fichiers
                    fileUploadSection.style.display = 'block';
                    submitButton.style.display = 'none'; // Masque le bouton "ENREGISTRER" jusqu'à saisie du titre
                    fileInputContainer.innerHTML = ''; // Vide les champs existants
                    fileCount = 0; // Réinitialise le compteur de fichiers
                    addFileInputFields(maxFiles); // Ajoute trois champs pour les fichiers
                } else { // Masque la section de téléchargement
                    fileUploadSection.style.display = 'none';
                    fileInputContainer.innerHTML = ''; // Efface le contenu de la section pour supprimer les champs et valeurs
                    fileCount = 0; // Réinitialise le compteur de fichiers
                    submitButton.style.display = 'block'; // Affiche directement le bouton "ENREGISTRER"
                }
            }

            function addFileInputFields(count) {
                while (fileCount < count && fileCount < maxFiles) {
                    fileCount++;
                    const fileDiv = document.createElement('div');
                    fileDiv.classList.add('form-group');
                    fileDiv.innerHTML = `
                        <label for="fileTitle${fileCount}"><b>Titre du fichier ${fileCount} :</b></label>
                        <input type="text" id="fileTitle${fileCount}" name="fileTitle${fileCount}" class="form-control"
                            oninput="validateFileTitle()">
                        <label for="fileLink${fileCount}"><b>Lien du fichier ${fileCount} :</b></label>
                        <input type="text" id="fileLink${fileCount}" name="fileLink${fileCount}" class="form-control">
                    `;
                    fileInputContainer.appendChild(fileDiv);
                }
            }

            // Valide le titre du premier fichier pour afficher le bouton ENREGISTRER
            function validateFileTitle() {
                const titleField1 = document.getElementById('fileTitle1');

                if (titleField1 && titleField1.value.trim() !== '') {
                    submitButton.style.display = 'block'; // Affiche le bouton "ENREGISTRER" si le titre du premier fichier est rempli
                } else {
                    submitButton.style.display = 'none'; // Masque le bouton si le titre du premier fichier est vide
                }
            }

            document.addEventListener('DOMContentLoaded', function() {
                const today = new Date();
                const yyyy = today.getFullYear();
                const mm = String(today.getMonth() + 1).padStart(2, '0'); // Mois de 0 à 11
                const dd = String(today.getDate()).padStart(2, '0'); // Jours du mois

                const formattedDate = `${yyyy}-${mm}-${dd}`;
                const dueDateInput = document.getElementById('due_date');
                dueDateInput.setAttribute('min', formattedDate); // Définir la date minimale

                dueDateInput.addEventListener('change', function() {
                    const inputDate = new Date(this.value);
                    const limitDate = new Date(today.getTime() + 48 * 60 * 60 * 1000); // 48 heures à partir de maintenant

                    if (inputDate < limitDate) {
                        document.getElementById('date_warning').style.display = 'block';
                    } else {
                        document.getElementById('date_warning').style.display = 'none';
                    }
                });
            });
        </script>
        <script>
			document.getElementById('taskForm').addEventListener('submit', function() {
				// Désactiver le bouton ENREGISTRER une fois cliqué
				document.getElementById('submitButton').disabled = true;
				// Optionnel : Changer le texte du bouton pour indiquer que la soumission est en cours
				document.getElementById('submitButton').innerText = 'Enregistrement en cours...';
			});
		</script>
    </body>
</html>